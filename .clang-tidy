Checks: >
  *,
  -llvmlibc-*,
  -altera-*,
  -modernize-use-trailing-return-type,
  -fuchsia-default-arguments-calls,
  -fuchsia-trailing-return,
  -fuchsia-default-arguments-declarations,
  -fuchsia-overloaded-operator
CheckOptions:
  - { key: readability-identifier-naming.ClassCase,                 value: CamelCase }
  - { key: readability-identifier-naming.StructCase,                value: CamelCase }
  - { key: readability-identifier-naming.EnumCase,                  value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase,          value: UPPER_CASE }
  - { key: readability-identifier-naming.NamespaceCase,             value: lower_case }
  - { key: readability-identifier-naming.TypeAliasCase,             value: CamelCase }
  - { key: readability-identifier-naming.LocalVariableCase,         value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,             value: lower_case }
  - { key: readability-identifier-naming.ParameterPackCase,         value: lower_case }
  - { key: readability-identifier-naming.PointerParameterCase,      value: lower_case }
  - { key: readability-identifier-naming.MemberCase,                value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberSuffix,       value: _ }
  - { key: readability-identifier-naming.MethodCase,                value: camelBack }
  - { key: modernize-loop-convert.MaxCopySize,                      value: '16' }
  - { key: modernize-loop-convert.MinConfidence,                    value: reasonable }
  - { key: modernize-loop-convert.NamingStyle,                      value: CamelCase }
  - { key: modernize-pass-by-value.IncludeStyle,                    value: llvm }
  - { key: modernize-replace-auto-ptr.IncludeStyle,                 value: llvm }
  - { key: modernize-use-nullptr.NullMacros,                        value: 'NULL' }
  - { key: readability-identifier-length.MinimumVariableNameLength,  value: 2}
  - { key: readability-identifier-length.MinimumParameterNameLength,  value: 2}
  - { key: hicpp-use-override.IgnoreDestructors, value: 'true' }
  - { key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic, value: 'true' }
